# # https://github.com/actions/deploy-pages#usage
# name: Deploy to GitHub Pages
# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - run: corepack enable
#       - uses: actions/setup-node@v3
#         with:
#           node-version: "20"
#       # Pick your own package manager and build script
#       - run: npm install
#       - run: npx nuxt build --preset github_pages
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v1
#         with:
#           path: ./.output/public
#   # Deployment job
#   deploy:
#     # Add a dependency to the build job
#     needs: build
#     # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
#     permissions:
#       pages: write      # to deploy to Pages
#       id-token: write   # to verify the deployment originates from an appropriate source
#     # Deploy to the github_pages environment
#     environment:
#       name: github_pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     # Specify runner + deployment step
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1
name: Generate a build and push to another branch
on:
    push:
      branches:
        - main
jobs: 
    build:
        runs-on: ubuntu-latest
        name: Build and Push
        steps:
          - name: git-checkout
            uses: actions/checkout@v2
    
          - name: Install all dependencies
            run: npm install
    
          - name: Build
            run: npm run build # The build command of your project
        
          - name: Push
            uses: s0/git-publish-subdir-action@develop
            env:
              REPO: self
              BRANCH: hostinger-deploy # The branch name where you want to push the assets
              FOLDER: ./.output/public # The directory where your assets are generated
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
              MESSAGE: "Build: ({sha}) {msg}" # The commit message
